var Loading=React.createClass({displayName:"Loading",render:function(){return React.DOM.div({className:"loader"},React.DOM.div({className:"loader-inner"},React.DOM.img({src:"/images/loader.gif",alt:"Just a moment.."})))}}),UiWidgetMixin={getSubmitButton:function(){return this.state.isDirty?React.DOM.button({className:"btn btn-success",id:"saveSchedule",onClick:this.saveData}," Save "):this.state.saving?React.DOM.button({className:"btn btn-success btn-loading"}," Saving.. "):React.DOM.button({className:"btn btn-primary"}," Saved ")},changeUIMode:function(){this.props.actionOnToggleUIMode()},initializeAutoSave:function(){setInterval(function(){var a=moment(this.state.mostRecentChangeAt),b=moment(),c=b.diff(a);c>2e3&&this.state.isDirty&&this.saveData()}.bind(this),1e3)}},TimeSlotComponent=React.createClass({displayName:"TimeSlotComponent",trickleDown:function(a,b){this.props.data.startTime=a,this.props.data.endTime=b,this.props.onSlotChange(this.props.dayCode,this.props.data)},componentDidMount:function(){var a=($(this.getDOMNode()),"#"+this.props.data.key+"_0"),b="#"+this.props.data.key+"_1",c=$(a).pickatime({interval:15}),d=c.pickatime("picker"),e=$(b).pickatime({interval:15,formatLabel:function(a){var b=this.get("min"),c=a.hour-b.hour,d=(a.mins-b.mins)/60,e=function(a,b){return a+" "+(1===a?b:b+"s")};return"<b>h</b>:i <!i>a</!i> <sm!all>("+e(c+d,"!hour")+")</sm!all>"}}),f=e.pickatime("picker");d.get("value")&&f.set("min",d.get("select")),d.on("set",function(a){a.select&&(f.set("min",d.get("select")),f.set("select",d.get("select").pick+60),this.trickleDown(d.get("value"),f.get("value")))}.bind(this)),f.on("set",function(a){a.select&&this.trickleDown(d.get("value"),f.get("value"))}.bind(this))},removeTimeSlot:function(){this.props.onSlotRemove(this.props.dayCode,this.props.data)},render:function(){return React.DOM.div({className:"time-slot-container clearfix"},React.DOM.div({className:"item time-slot-unit"},React.DOM.input({className:"form-control gwg-timepicker",id:this.props.data.key+"_0",name:this.props.data.key+"_0",value:this.props.data.startTime,"data-type":"startTime"})),React.DOM.div({className:"item time-slot-join"},React.DOM.span({className:"schedule-text-middle"},"to")),React.DOM.div({className:"item time-slot-unit"},React.DOM.input({className:"form-control gwg-timepicker",id:this.props.data.key+"_1",name:this.props.data.key+"_1",value:this.props.data.endTime,"data-type":"endTime"})),React.DOM.div({className:"item time-slot-remove"},React.DOM.button({className:"btn btn-link",onClick:this.removeTimeSlot},React.DOM.i({className:"glyphicon glyphicon-remove"}))))}}),DayComponent=React.createClass({displayName:"DayComponent",addTimeSlot:function(){var a,b,c=_.max(this.props.data.slots,function(a){return moment(a.endTime,"hh:mm A").hours()});_.isObject(c)?(a=c.endTime,b=moment(c.endTime,"hh:mm A").add("hours",1).format("hh:mm A")):(a="08:00 AM",b="09:00 AM"),this.props.data.slots.push({startTime:a,endTime:b,key:this.props.data.day_code+"_"+ ++this.props.data.slotIndex}),this.props.data.currentMode="manual",this.props.onDayChange(this.props.data.day_code,{slots:this.props.data.slots,currentMode:this.props.data.currentMode})},removeAllTimeSlots:function(){this.props.data.slots=[],this.props.data.currentMode="manual",this.props.onDayChange(this.props.data.day_code,{slots:this.props.data.slots,currentMode:this.props.data.currentMode})},handleOnSlotRemove:function(a,b){var c=this.props.data;c.slots=_.reject(c.slots,function(a){return a.key===b.key}),this.props.onDayChange(a,c)},handleOnSlotChange:function(a,b){var c=this.props.data;c.slots=_.map(c.slots,function(a){return a.key===b.key&&(a=b),a}),this.props.onDayChange(a,c)},handleClickOnCopyModeChange:function(a){var b=$(a.target),c=b.data("day_code");this.props.onDayChange(this.props.data.day_code,{selectedDayCode:c})},getChild:function(){switch(this.props.data.currentMode){case"copy":var a=this.props.copyModeData.map(function(a){return React.DOM.li({className:"item",key:a.day_code},React.DOM.a({className:a.day_code===this.props.data.selectedDayCode?"selected":"","data-day_code":a.day_code,onClick:this.handleClickOnCopyModeChange},a.day_code))},this);return React.DOM.div({className:"copyModeContainer"},React.DOM.div({className:"l-h-list"},React.DOM.p({className:"item schedule-text-middle text-light"},"Same as: "),React.DOM.ul({className:"item l-h-list guru-schedule-copy-links"},a)));case"manual":if(this.props.data.slots.length){var b=this.props.data.slots.map(function(a){return TimeSlotComponent({data:a,dayCode:this.props.data.day_code,onSlotChange:this.handleOnSlotChange,onSlotRemove:this.handleOnSlotRemove})},this);return React.DOM.div({className:"daySlotsContainer"},b)}return React.DOM.div({className:"copyModeContainer"},React.DOM.p({className:"schedule-text-middle"},"No slots"))}},getRowActionItemIcon:function(){return React.DOM.i("copy"===this.props.data.currentMode?{className:"fa fa-clock-o"}:this.props.data.slots.length?{className:"glyphicon glyphicon-plus"}:{className:"fa fa-edit"})},getRowActionItemIconTitle:function(){return"copy"===this.props.data.currentMode?"Create time slots":this.props.data.slots.length?"Add new slot":"Create slots"},render:function(){return React.DOM.div({className:"day-slots-container"},React.DOM.div({className:"row"},React.DOM.div({className:"col-sm-2 text-left"},React.DOM.p({className:"text-bold schedule-text-middle"},this.props.data.day_name)),React.DOM.div({className:"col-sm-7"},this.getChild()),React.DOM.div({className:"col-sm-3 text-right"},React.DOM.a({className:"schedule-text-middle addNewSlot",title:this.getRowActionItemIconTitle(),onClick:this.addTimeSlot},this.getRowActionItemIcon()),React.DOM.a({className:"schedule-text-middle clearAllDaySlots",title:"Remove All Slots",onClick:this.removeAllTimeSlots},React.DOM.i({className:"glyphicon glyphicon-trash"})))))}}),WeeklyWidget=React.createClass({displayName:"WeeklyWidget",mixins:[UiWidgetMixin],getInitialState:function(){return{data:[],fetched:!1,isDirty:!1,saving:!1,mostRecentChangeAt:new Date,intervalNumber:0}},componentWillMount:function(){$.getJSON("/api/guru/schedule",function(a){_.each(a.schedule,function(a){_.each(a.slots,function(b,c){b.key=a.day_code+"_"+c},this),a.slotIndex=a.slots.length},this),this.setState({data:a.schedule,fetched:!0})}.bind(this))},componentDidMount:function(){this.initializeAutoSave()},saveData:function(){this.setState({isDirty:!1,saving:!0}),$.post("/api/guru/schedule",{schedule:this.state.data},function(){setTimeout(function(){this.setState({saving:!1})}.bind(this),500)}.bind(this)),mixpanel.track("Schedule modified and saved")},handleOnChange:function(a,b){this.setState({mostRecentChangeAt:new Date,isDirty:!0,data:_.map(this.state.data,function(c){if(c.day_code===a)for(var d in b)b.hasOwnProperty(d)&&(c[d]=b[d]);if("copy"===c.currentMode){var e=this.getCopyModeData(c);if(e.length)_.isObject(_.find(e,function(a){return c.selectedDayCode===a.day_code},this))||(c.selectedDayCode=e[0].day_code);else{_.find(this.state.data,function(a){return a.slots.length})}}return c},this)}),mixpanel.track("Schedule modified")},getCopyModeData:function(a){return"copy"!==a.currentMode?[]:this.state.data.filter(function(b){return"manual"===b.currentMode&&b.day_code!==a.day_code&&!!b.slots.length})},handleRemoveAllSlots:function(){if(confirm("Are you sure you want to remove all slots?")){var a=this.state.data.map(function(a){return a.slots=[],a.currentMode="manual",a});this.setState({data:a,isDirty:!0})}},render:function(){var a=this.state.data.map(function(a){var b=this.getCopyModeData(a);return DayComponent({data:a,key:a._id,onDayChange:this.handleOnChange,copyModeData:b})},this);return this.state.fetched?React.DOM.div(null,React.DOM.div({className:"day-slots-container"},React.DOM.div({className:"row"},React.DOM.div({className:"clearfix"},React.DOM.div({className:"pull-right"},React.DOM.button({className:"btn btn-link",onClick:this.changeUIMode}," Edit on Calendar "),this.getSubmitButton.call(this))))),a):React.DOM.div({className:"has-min-height"},Loading(null))}}),CalendarWidget=React.createClass({displayName:"CalendarWidget",mixins:[UiWidgetMixin],getDefaultProps:function(){return{currentStateStack:{}}},getInitialState:function(){return{isDirty:!1,saving:!1,fetched:!1,mostRecentChangeAt:new Date}},componentWillMount:function(){this.setState({fetched:!0})},_updateCalendarChanges:function(a,b){this.props.currentStateStack[a]=b,this.setState({isDirty:!0,mostRecentChangeAt:new Date})},_getKeyForPayLoad:function(a){var b=moment(a);return b.set("hour",0),b.set("minute",0),b.set("second",0),b.set("millisecond",0),b.toDate()},saveData:function(){this.setState({isDirty:!1,saving:!0});var a=this.props.currentStateStack,b=_.keys(a),c={};_.each(b,function(b){var d=moment(b,"X"),e=this._getKeyForPayLoad(d),f=!0;c[e]=c[e]||{added_slots:[],removed_slots:[]};var g=a[b];if(g)if(moment(b,"X").date()===moment(g.start).date())moment(b,"X").format("hh:mm A")===moment(g.start).format("hh:mm A")&&(f=!1),c[e].added_slots.push({startTime:moment(g.start).format("hh:mm A"),endTime:moment(g.end).format("hh:mm A")});else{var h=moment(g.start),i=this._getKeyForPayLoad(h);c[i]=c[i]||{added_slots:[],removed_slots:[]},c[i].added_slots.push({startTime:moment(g.start).format("hh:mm A"),endTime:moment(g.end).format("hh:mm A")})}else;f&&c[e].removed_slots.push({startTime:d.format("hh:mm A")})},this);var d=_.map(_.keys(c),function(a){return{date:a,added_slots:c[a].added_slots,removed_slots:c[a].removed_slots}},this);$.post("/api/guru/schedule",{calendar_schedule:d},function(){setTimeout(function(){this.setState({saving:!1})}.bind(this),500)}.bind(this))},componentDidMount:function(){function a(){var a=jQuery("#calendarTrash"),c=a.offset(),d=c.left,e=c.left+a.outerWidth(!0),f=c.top,g=c.top+a.outerHeight(!0);return b.x>=d&&b.x<=e&&b.y>=f&&b.y<=g}this.initializeAutoSave();var b={x:-1,y:-1};jQuery(document).on("mousemove",function(a){b.x=a.pageX,b.y=a.pageY});var c=$(this.getDOMNode()).find("#calendarEditorContainer").fullCalendar({header:{left:"prev,next today",center:"title",right:"month, agendaWeek, agendaDay"},aspectRatio:2,defaultView:"agendaWeek",editable:!0,events:{url:"/api/public/schedule",type:"GET",data:{username:this.props.user.username}},selectable:!0,selectHelper:!0,slotEventOverlap:!1,dragRevertDuration:0,eventRender:function(a){"reserved"==a.title.toLowerCase()&&(a.editable=!1)},select:function(a,b){if(moment(a).isBefore(moment()))noty({layout:"topCenter",text:"Time travelling in the past?",timeout:2500,type:"warning",killer:!0});else{var d="Available";if(d){var e=moment(a).unix();this._updateCalendarChanges(e,{title:d,start:a,end:b}),c.fullCalendar("renderEvent",{id:e,title:d,start:a,end:b,allDay:!1},!0)}}c.fullCalendar("unselect")}.bind(this),eventMouseover:function(){$(this).mousemove(function(){var b=jQuery("#calendarTrash");a()?b.hasClass("to-trash")||b.addClass("to-trash"):b.hasClass("to-trash")&&b.removeClass("to-trash")})},eventDragStop:function(b){if(a()){this._updateCalendarChanges(b.id,null),c.fullCalendar("removeEvents",b.id);var d=jQuery("#calendarTrash");d.hasClass("to-trash")&&d.removeClass("to-trash")}}.bind(this),eventDrop:function(a){this._updateCalendarChanges(a.id,{title:a.title,start:a.start,end:a.end})}.bind(this),eventResize:function(a){this._updateCalendarChanges(a.id,{title:a.title,start:a.start,end:a.end})}.bind(this)});$(this.getDOMNode()).find("#calendarEditorContainer").find(".fc-header-left").append('<div id="calendarTrash" class="calendar-trash"><i class="fa fa-trash-o"></i></div>')},render:function(){return this.state.fetched?React.DOM.div(null,React.DOM.div({className:"day-slots-container"},React.DOM.div({className:"row"},React.DOM.div({className:"clearfix"},React.DOM.div({className:"pull-right"},React.DOM.button({className:"btn btn-link",onClick:this.changeUIMode}," Edit Weekly Schedule "),this.getSubmitButton.call(this))))),React.DOM.div({id:"calendarEditorContainer"})):React.DOM.div({className:"has-min-height"},Loading(null))}}),DaysList=React.createClass({displayName:"DaysList",getInitialState:function(){return{isCalendarMode:!0,isUserFetched:!1,user:{}}},componentWillMount:function(){$.getJSON("/api/guru/user",function(a){a&&(this.setState({isUserFetched:!0,user:a}),mixpanel.identify(a.email),mixpanel.people.set({$email:a.email,$name:a.name,$last_login:new Date}),mixpanel.track("Visited Schedule page"))}.bind(this))},handleActionOnToggleUIMode:function(a){this.setState({isCalendarMode:a})},getModeUI:function(){return this.state.isCalendarMode?CalendarWidget({user:this.state.user,actionOnToggleUIMode:this.handleActionOnToggleUIMode.bind(this,!1)}):WeeklyWidget({user:this.state.user,actionOnToggleUIMode:this.handleActionOnToggleUIMode.bind(this,!0)})},ensureUserBeforeUI:function(){return this.state.isUserFetched?this.getModeUI():React.DOM.div(null)},render:function(){return React.DOM.div({className:"has-min-height"},React.DOM.h3(null,"Manage Schedule"),React.DOM.p({className:"text-light"}," People will make reservations against these timings. "),React.DOM.p({className:"text-light gwg-callout gwg-callout-info"}," Maintain the schedule below to reflect your availability. "),this.ensureUserBeforeUI())}});React.renderComponent(DaysList(null),document.getElementById("scheduleCreator"));